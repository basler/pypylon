[build-system]
requires = ["setuptools>=42,<72", "swig==4.3", "wheel"]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
skip = "pp* cp36-* cp37-* cp38-*"
build-verbosity = "0"
test-requires = "pytest numpy"

[tool.pytest.ini_options]
testpaths = [
    "tests/genicam_tests",
    "tests/pylon_tests/emulated",
    "tests/pylondataprocessing_tests",
]

[tool.cibuildwheel.windows]
archs = "AMD64"
build = "cp39-win_*"
before-all = 'echo "Building: %CIBW_BUILD%"'

[tool.cibuildwheel.macos]
archs = "x86_64 arm64"
build = "cp39-macosx_*"
before-all = 'echo "Building: $CIBW_BUILD"'
repair-wheel-command = ""
test-skip = [
    "tests/pylondataprocessing_tests"
]

[[tool.cibuildwheel.overrides]]
select = "*-macosx_arm64"
before-build = [
             '''
             echo "arm framework"
             if [ -z "${PYLON_FRAMEWORK_ARM64}" ]; then
                 echo "Set PYLON_FRAMEWORK_ARM64 to the directory where pylon.framework for arm64 is installed"
                 exit -1
             fi
             '''
            ]
environment = { PYLON_FRAMEWORK_LOCATION="${PYLON_FRAMEWORK_ARM64}",MACOSX_DEPLOYMENT_TARGET="11.0" }

[[tool.cibuildwheel.overrides]]
select = "*-macosx_x86_64"
before-build = [
             '''
             echo "intel framework"
             if [ -z "${PYLON_FRAMEWORK_X86_64}" ]; then
                 echo "Set PYLON_FRAMEWORK_X86_64 to the directory where pylon.framework for x86_64 is installed"
                 echo "default of /Library/Frameworks will be used"
             fi
             '''
            ]
environment = { SYSTEM_VERSION_COMPAT="0",PYLON_FRAMEWORK_LOCATION="${PYLON_FRAMEWORK_X86_64}",MACOSX_DEPLOYMENT_TARGET="11.0" }
