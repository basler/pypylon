Version 2.1.0a1
    - Date 2023-05-24
    - Updated to pylon 7.3 on linux and windows

Version 2.0.0
    - Date 2023-05-24
    - Updated to pylon 7.2 on linux and windows
    - Dropped support for python 3.4 and 3.5 on linux
    - Linux binaries are now manylinux_2_28 compliant and therefore 
      require glibc >= 2.28

Version 1.9.0
    - Date 2023-02-07
    - Reduced the number of the python versions that are used for CI on
      Windows: Dropped 3.4 and 3.5 completely and the 32 bit builds of the
      remaining versions.
    - Added support for pixel formats Bayer**16 in GetArray()
    - Fixed decoding problems when detecting MSVC version.
    - Added CI builds for python 3.11
    - Fixed memory leak in ImageDecompressor

Version 1.8.0
    - Date 2022-02-14
    - Adapted linux and windows 64 bit builds to pylon 6.3.0 (which includes
      the removal of BCON support).
    - Added python 3.10 binary releases

Version 1.7.4
    - Date 2021-10-19
    - setup.py: Some python2 relics have been removed and distutils is no
      longer used because distutils is deprecated in python 3.10.
    - setup.py: Include vcruntime140_1.dll into the package for current MVSC
      compiler.
    - Fixed double enumeration bug on linux
    - Updated to pylon 6.2 on windows and linux and adapted some tests for it.
    - Dropped linux x86 (32bit) support as it is no longer supported by pylon

Version 1.7.3
    - Internal Basler release

Version 1.7.2
    - Date 2021-03-03
    - Fixed runtime error in binary windows releases with python 3.5 - 3.8

Version 1.7.1
    - Date 2021-02-22
    - Added missing pypi deployments for python 3.9 on windows

Version 1.7.0
    - Date 2021-02-19
    - Adapted to python 3.9.
    - Added a way to force a certain GenTL search path (used for frame grabber
      development).
    - Avoided the dependency on vcruntime140_1.dll when building with Visual
      Studio 2019.
    - Added macOS CI builds.
    - Migrated from travis to gh-actions for linux and macOS.
    - Added pypi deployments for linux and macOS
    - Expanded samples/gige_ip_config.py to include demonstrations of
      BroadcastIpConfiguration

Version 1.6.0
    - Date 2020-08-20
    - Fixed issues with callbacks due to intptr_t truncation on linux
    - Fixed unittests that failed in python 3.8
    - Updated to current pylon version for windows and linux
    - Enabled unittests in CI-builds
    - Fixed aarch64 binary wheel releases on github

Version 1.5.4
    - Date 2020-04-16
    - Fix interaction with ipython jedi autocompleter
    - Dropped python 3.3 binary releases
    - Added python 3.8 binary releases
    - Use swig 4.0 for linux binary releases

Version 1.5.3
    - Date 2020-03-23
    - Use pylon 6.1.0.19674 to build for Windows
    - Added support for pixel format Mono16 in GetArray()

Version 1.5.2
    - Date 2020-03-03
    - Use pylon 6.1.0.10500 to build for Windows
    - Implement support for decompression of Basler Compression Beyond
      payload.
    - Add several properties to PylonImage
    - Fix a bug in GenICam file access

Version 1.5.1
    - Date 2019-11-12
    - Fixed travis and appveyor builds for windows and linux
    - Added preliminary pylon 6 support for linux
    - Dropped python 2.7 support
    - Fixed GetBuffer in PylonImage

Version 1.5.0
    - Date 2019-09-18
    - Fixed read part of GenICam file access (FileProtocolAdapter.i)
    - Fixed a bug where Pythons memory allocation was used without holding the GIL
    - Amended readme.md
    - Use SWIG 4.0.0 and removed SWIGs legacy handling for boolean parameters.
      This means that APIs that expect a boolean parameter and had accepted
      any Python type in the past (since any Python type can be fed into
      'bool()'), NO LONGER accept anything other than true Python 'bool' objects.
      E.g. where in the past 'IBoolean.SetValue("Hello")' was OK, it is now
      required to use code like this 'IBoolean.SetValue(bool("Hello"))'.
    - Fixed a memory leak: Info objects returned by EnumerateDevices and
      EnumerateTls were not released.
    - Added support for accessing ITransportLayer (especially GigETransportLayer).
      Samples have been added that demonstrate using these GigE-specific methods:
        - AnnounceRemoteDevice
        - RenounceRemoteDevice
        - ForceIp
        - RestartIpConfiguration
        - issuing action commands
    - Fixed creation of numpy arrays for pixel type BayerGB12Packed. Added
      support for 10 bit packed formats.
    - Use Pylon 6.0.0 on windows. There is no more support for 1394 in Pylon 6,
      but support for CXP and other GenTL producers has been added.
    - Add support for dealing with Interfaces and their node maps. A sample
      demonstrates how to use the interface node map of a Basler CXP-Interface-
      Card to toggle the state of 'Power over CoaXPress'.

Version 1.4.0
    - Date 2019-03-13
    - Fixed a regression introduced in version 1.1.0 where pypylon stopped being
      importable when used in an application built with PyInstaller.
    - Fixed PylonImageBase so that the methods CanSaveWithoutConversion, Save
      and Load can be used. Added a sample that shows how images can be saved.
    - Added macOS platform support
    - Switched to Pylon 5.2.0 for windows and linux builds

Version 1.3.1
    - Date 2018-08-13
    - Bump version number to fix pypi deployment

Version 1.3.0
    - Date 2018-08-09
    - The pylon version is no longer contained in the local version tag of pypylon
      when building with the reference pylon version (currently 5.0.12)
    - Better package metadata
    - Windows wheels are pushed to pypi
    - Linux release builds for python 2.7

Version 1.2.0
    - Date 2018-07-06
    - Remove the pylon build number from the python package name
    - Fixed a bug in GrabResult.GetArrayZeroCopy (accessing a non-existent
      attribute). Added a zero-copy sample.
    - fix image format converter
    - enable enum_props in Pylon
    - fix SWIG include path in --pp-debug case
    - Fixed TlFactory.EnumerateDevices so that arbitrary objects are no longer
      accepted as boolean arguments - they have to be 'real' bool() objects.
      This was done to easily spot this unwitting omission:
        # programmer wrote:
        found1 = pylon.TlFactory.GetInstance().EnumerateDevices(single_di)
        # but meant to say:
        found2 = pylon.TlFactory.GetInstance().EnumerateDevices([single_di])
    - Pylon 5.0.11 and 5.0.12 require that the workaround for DLL loading on
      windows is reactivated (had been removed in 1.0.7).
    - Search for swig in PATH on windows
    - Ensure swig version is >= 3.0.12

Version 1.1.0
    - Date 2018-01-15
    - Fixed a memory leak in exception handling code.
    - Fixed a memory leak in string handling code.
    - Fixed a crash, that happend when calling genicam.Deregister() on Win64.
    - Completely reworked the SWIG source files. While this is largely
      transparent to pypylon users, these changes in the API where introduced:
       - The way the output pixel format of an ImageFormatConverter is set
         became a little more pythonic. While in the past accessing it was done
         like this:
            converter.OutputPixelFormat.SetValue(format)
            format = converter.OutputPixelFormat.GetValue()
         now is has to be accessed directly as a property:
            converter.OutputPixelFormat = format
            format = converter.OutputPixelFormat

Version 1.0.11
    - Date 2017-10-16
    - Use pylon 5.0.10.10613 to build pypylon.
    - Enable usage of EnumerateTls.
      E.g.:
        tl_infos = pylon.TlFactory.GetInstance().EnumerateTls()
    - Enable usage of the device filter in EnumerateDevices.
      E.g.:
        filter_list = [pylon.DeviceInfo()]
        found_devices = pylon.TlFactory.GetInstance().EnumerateDevices(filter_list)
    - Distribute pylons GenTL consumer library as well, so that GenTL producers
      can be used.
    - Restored support for PylonImageWindow on Windows. That got lost
      accidentally in January 2015 (without anyone noticing it).

Version 1.0.10
    - Date 2016-11-29
    - Use Pylon-BCON-INTERNAL_5.0.7.9644 (with BCON fixes) to create the builds
      of pypylon for windows.

Version 1.0.9
    - Date 2016-11-18
    - Use Pylon-BCON-INTERNAL_5.0.7.9615 (with BCON protocol extensions) to
      create the builds of pypylon for windows.

Version 1.0.8
    - Date 2016-10-06
    - Adapt SWIG code to a change in Pylon::CTlFactory.
    - Use Pylon-BCON-INTERNAL_5.0.6.9389 (with BCON bug fixes) to create
      build of pypylon for windows.

Version 1.0.7
    - Date 2016-08-22
    - Use Pylon version 5.0.5.
    - Let development builds have a valid version number.
    - Drop the distribution of the deprecated modules 'pylon' and 'genicam' (
      see notes for 1.0.0). Without them import statements have to be in the
      form of 'import pypylon.pylon'. Those who still want to use these legacy
      modules have to use the ones from the last release.
    - Thanks to an improvement in the way Pylon for windows loads its libraries
      the workaround in the pypylon.pylon module for loading the transport
      layer DLLs is no longer necessary and was removed.
    - Add support for BCON TL in Linux builds as well (up to now it was only
      included in Windows builds).

Version 1.0.6
    - Date 2016-06-07
    - Improve error message for accessing an invalid GrabResult attribute.
    - In order to adapt to changes in the BCON transport layer, use Pylon
      5.0.2.8501 for creating the windows builds.

Version 1.0.5
    - Date 2016-05-17
    - On Windows pypylon for python 3.5 did not distribute the library
      'msvcp140.dll' although it depends on it. Now that file is distributed
      as well.
    - Add support for BCON TL

Version 1.0.4
    - Date 2016-04-25
    - Fixed two minor memory leaks
    - Module genicam: Fixed all methods that use a feature_list_t to
      return properly casted types.
    - On windows the pylon camera link files are now distributed.
    - Change the way the DLL seach path is handled for windows. The previous
      way of that handling was easily disturbed by importing other modules.

Version 1.0.3
    - Date 2016-01-14
    - Fixed a multi-threading issue in the genicam callback mechamism.
    - Reworked build scripts for Linux.

Version 1.0.2
    - Date 2016-01-12
    - Make pypylon requirement of legacy modules less restrictive. Instead of
      being tied to a certain version of pypylon, the legacy modules now simply
      depend on 'pypylon'.
    - Version 1.0.0 tried to fix a build warning. That change unintentionally
      corrupted the support for the genicam callback mechamism. Now the callback
      support is operational again.

Version 1.0.1
    - Date 2015-12-09
    - Fix arm build

Version 1.0.0
    - Date 2015-12-09
    - Use pylon5 copy deloyment feature in order to deliver a more self
      contained pypylon. Now the only thing that needs to be present aside
      from python and pypylon are the pylon drivers - no more need for a
      complete pylon installation.
    - Using the copy deployment feature leads to an INCOMPATIBLE change in
      module/package layout. Up to this point 'pylon' and 'genicam' have been
      simple modules that could be imported directly - e.g. 'import pylon'.
      Now there is the package 'pypylon' that consists of the modules 'pylon'
      and 'genicam'. So the import has to look like this 'import pypylon.pylon'.
    - In order to ease the transition to the new layout, the 'legacy' packages
      'pylon' and 'genicam' are provided. When those are installed in addition
      to 'pypylon' client code can still use the import 'import pylon' or
      'import genicam'. These new 'legacy' packages are marked as 'deprecated'
      and will be dropped at some point in the future.
    - pypylon.pylon and pypylon.genicam now have an attribute named
      '__version__' that contains the version string.

Version 0.9.0 and 0.9.1
    - Date 2015-11-06
    - First steps towards using pylon5's copy deployment feature.

Version 0.3.0
    - Date 2015-11-04
    - Build on pylon5 and genicam 3

Version 0.2.0
    - Date 2015-09-07
    - Lots of stuff happend before this release - have to look at git history.
    - Probably the last version that builds on pylon4. If there will be a need
      for further pylon4 builds, these will stick to version 0.2.xx.
