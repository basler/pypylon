language: shell

# It is currently not possible to build manylinux packages for linux arm. Reasons are:
#   - The binary dependencies of pylon are newer than specified in manylinux2014
#   - There is no manylinux armhf docker container available
# - P=manylinux2014_armv7l A=cp35m
# - P=manylinux2014_armv7l A=cp36m
# - P=manylinux2014_armv7l A=cp37m
# - P=manylinux2014_armv7l A=cp38
# - P=manylinux2014_aarch64 A=cp35m
# - P=manylinux2014_aarch64 A=cp36m
# - P=manylinux2014_aarch64 A=cp37m
# - P=manylinux2014_aarch64 A=cp38


jobs:
  include:
    # manylinux2014_x86_64
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp35m
      services:
        - docker       
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp36m
      services:
        - docker      
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp37m
      services:
        - docker           
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp38
      services:
        - docker            
    # manylinux2014_i686
    - arch: amd64
      env: P=manylinux2014_i686 A=cp35m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_i686 A=cp36m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_i686 A=cp37m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_i686 A=cp38
      services:
        - docker         
    # linux_x86_64
    - arch: amd64
      env: P=linux_x86_64 A=cp34m
      services:
        - docker            
    - arch: amd64
      env: P=linux_x86_64 A=cp35m
      services:
        - docker            
    - arch: amd64
      env: P=linux_x86_64 A=cp36m
      services:
        - docker            
    - arch: amd64
      env: P=linux_x86_64 A=cp37m
      services:
        - docker            
    - arch: amd64
      env: P=linux_x86_64 A=cp38
      services:
        - docker            
    # linux_i686
    - arch: amd64
      env: P=linux_i686 A=cp34m
      services:
        - docker            
    - arch: amd64
      env: P=linux_i686 A=cp35m
      services:
        - docker            
    - arch: amd64
      env: P=linux_i686 A=cp36m
      services:
        - docker          
    - arch: amd64
      env: P=linux_i686 A=cp37m
      services:
        - docker            
    - arch: amd64
      env: P=linux_i686 A=cp38
      services:
        - docker            
    # linux_armv7l
    # armv7l is still build using qemu on x86, because it was not easily possible to build for armv7l (The best was armv8l using linux32 wrapper)
    # The tests are disabled for armv7l because installing the required numpy took too long and we hit the maximum allowed travis build time.
    - arch: amd64
      env: P=linux_armv7l A=cp34m ARGS="--disable-tests"
      services:
        - docker            
    - arch: amd64
      env: P=linux_armv7l A=cp35m ARGS="--disable-tests"
      services:
        - docker            
    - arch: amd64
      env: P=linux_armv7l A=cp36m ARGS="--disable-tests"
      services:
        - docker            
    - arch: amd64
      env: P=linux_armv7l A=cp37m ARGS="--disable-tests"
      services:
        - docker           
    - arch: amd64
      env: P=linux_armv7l A=cp38 ARGS="--disable-tests"
      services:
        - docker            
    # linux_aarch64
    - arch: arm64
      env: P=linux_aarch64 A=cp34m
      services:
        - docker            
    - arch: arm64
      env: P=linux_aarch64 A=cp35m
      services:
        - docker      
    - arch: arm64
      env: P=linux_aarch64 A=cp36m
      services:
        - docker           
    - arch: arm64
      env: P=linux_aarch64 A=cp37m
      services:
        - docker            
    - arch: arm64
      env: P=linux_aarch64 A=cp38
      services:
        - docker            
    # osx
    - name:  "Python 3.6 on macOS"
      os: osx
      osx_image: xcode12.2
      env: P=macosx-10.15-intel A=cp36
    - name:  "Python 3.7 on macOS"
      os: osx
      osx_image: xcode12.2
      env: P=macosx-10.15-intel A=cp37
    - name:  "Python 3.8 on macOS"
      os: osx
      osx_image: xcode12.2
      env: P=macosx-10.15-intel A=cp38
    - name:  "Python 3.9 on macOS"
      os: osx
      osx_image: xcode12.2
      env: P=macosx-10.15-intel A=cp39
        
  allow_failures:
    # manylinux fails, because the runtime dependencies of current pylon are higher than manylinux2014.
    # The jobs are still kept in here to keep the mechanics alive.
    # manylinux2014_x86_64
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp35m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp36m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp37m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_x86_64 A=cp38
      services:
        - docker            
    # manylinux2014_i686
    - arch: amd64
      env: P=manylinux2014_i686 A=cp35m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_i686 A=cp36m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_i686 A=cp37m
      services:
        - docker            
    - arch: amd64
      env: P=manylinux2014_i686 A=cp38  
      services:
        - docker            

install:
- cd $TRAVIS_BUILD_DIR
- mkdir pylon_installer && cd pylon_installer
- |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    travis_retry curl -sSfL -O "${PYLON_DOWNLOAD_URL_BASE}/pylon-6.1.2.19990.zip"
  else
    for PYLON_VERSION in 6.1.0.19674_x86 6.1.1.19861_x86_64 6.1.3.20159_armhf 6.1.3.20159_aarch64 ; do
      travis_retry curl -sSfL -O "${PYLON_DOWNLOAD_URL_BASE}pylon_${PYLON_VERSION}_setup.tar.gz"
    done
  fi
  
- echo "Pylon Installer:" && ls

script:
- |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      eval "$(pyenv init -)"
      export PATH=$HOME/.pyenv/bin:$PATH
      case $A in
        cp36)
          PYENV_VERSION="3.6"
          travis_retry curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.6.8/python-3.6.8-macosx10.9.pkg"
          ;;
        cp37)
          PYENV_VERSION="3.7"
          travis_retry curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.7.9/python-3.7.9-macosx10.9.pkg"
          ;;
        cp38)
          PYENV_VERSION="3.8"
          travis_retry curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.8.7/python-3.8.7-macosx10.9.pkg"
          ;;
        cp39)
          PYENV_VERSION="3.9"
          travis_retry curl -sSfL -o python.pkg "https://www.python.org/ftp/python/3.9.1/python-3.9.1-macosx10.9.pkg"
          ;;
        *)
          echo "Invalid python version $A"
          exit -1
          ;;
      esac
      sudo installer -pkg python.pkg -target /
      cd ${TRAVIS_BUILD_DIR}/pylon_installer
      unzip pylon-*.zip
      hdiutil attach pylon-*.dmg
      sudo installer -pkg /Volumes/pylon\ *\ Camera\ Software\ Suite/pylon-*.pkg  -target /
      hdiutil detach /Volumes/pylon\ *\ Camera\ Software\ Suite
      brew install swig
      cd ${TRAVIS_BUILD_DIR}
      pip3 install numpy
      pip3 install wheel
      # pylon 6.1 is linked against 10.14
      export MACOSX_DEPLOYMENT_TARGET=10.14
      python3 setup.py test
      python3 setup.py bdist_wheel
  else
      cd $TRAVIS_BUILD_DIR

      if [ "$TRAVIS_CPU_ARCH" == "amd64" ]; then
          docker run --rm --privileged multiarch/qemu-user-static:register --reset
      fi
      ./scripts/build/build-arch.sh --platform-tag $P --abi-tag $A --pylon-dir ./pylon_installer $ARGS
  fi
  ls -l dist/*
  
deploy:
  provider: releases
  skip_cleanup: true
  api_key:
    secure: R46oPGgeRYe2GB5JLMW8doUQf4lQx1oa+Jvr7HMbZpoVHC/EV37l9wrYLkY3BHLc3DUB6Xnc94Dc0IxEnQ3AV+vuSmDTDqdsEo7KYF+ZRMab+J4XpzLvP7E0QHwslXhCIUraEtTom4UydV5Oh6Zz4KA5utNjE9O7KUHHatcccq7/fP/8M2aZocVkkwOzNfl91tTT1nJXMtf10XGKkdI1O0VwSLkXjihIbPDANx53RWCgJgD3JGwbsDQf3lg6mzaJyx7DJ0BVSZT5tErE32pkLJqXNLsy/RQ1lPu0Ycf1HxrgYqH8NvDu4KxfKw41dcMkp6gN4ELhuVOChkztvxB1QPKHn6SdJL86+ipOZiycdnqvAAg1UD2q9idCDE4KhrD8PBJXme/1qLq578NA2PmXbWEGuHk69N/CNWhg898pFUQb600LhpsT28J7HVxGOrELr/6W0RNuEA0YCemfhDm5CQlFw8GVQ4DdFOM6dMyeeQnuWbXKQow9W0ZH/Hf8cklLfvYRYZxoulHzOF6Ley1MMVO2RHWnkZ078Xatm37El2oHkv1xxr/7Yo8GZyKTzaRKrsemtIFnuCxmK/JKGhKJlgtn6en4PL99X4EjmokjL5dhXSgz6jGb72xK7V+Xo5N6DH5t4p5huHXO8HXd5Sq3jHXD5eOZu5iHiwdrkzcJgkc=
  file_glob: true
  file: dist/*
  on:
    repo: basler/pypylon
    branch: master
    tags: true
